/**
 * s4s-full
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S4sFull) {
      root.S4sFull = {};
    }
    root.S4sFull.Pack = factory(root.S4sFull.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Pack model module.
   * @module model/Pack
   * @version stable
   */

  /**
   * Constructs a new <code>Pack</code>.
   * Model description
   * @alias module:model/Pack
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>Pack</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Pack} obj Optional instance to populate.
   * @return {module:model/Pack} The populated <code>Pack</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('subscriptible')) {
        obj['subscriptible'] = ApiClient.convertToType(data['subscriptible'], 'Boolean');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('resources')) {
        obj['resources'] = ApiClient.convertToType(data['resources'], {'String': 'Integer'});
      }
      if (data.hasOwnProperty('expiration')) {
        obj['expiration'] = ApiClient.convertToType(data['expiration'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {Boolean} subscriptible
   */
  exports.prototype['subscriptible'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Object.<String, Integer>} resources
   */
  exports.prototype['resources'] = undefined;
  /**
   * @member {module:model/Pack.ExpirationEnum} expiration
   */
  exports.prototype['expiration'] = undefined;


  /**
   * Allowed values for the <code>expiration</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ExpirationEnum = {
    /**
     * value: "Month"
     * @const
     */
    "Month": "Month",
    /**
     * value: "Year"
     * @const
     */
    "Year": "Year",
    /**
     * value: "Day"
     * @const
     */
    "Day": "Day",
    /**
     * value: "Week"
     * @const
     */
    "Week": "Week",
    /**
     * value: "Infinity"
     * @const
     */
    "Infinity": "Infinity"  };


  return exports;
}));


