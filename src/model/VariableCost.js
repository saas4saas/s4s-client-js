/**
 * s4s-full
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/VariableCostIntervalCost', 'model/VariableCostIntervalPerUnit', 'model/VariableCostPerUnit'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./VariableCostIntervalCost'), require('./VariableCostIntervalPerUnit'), require('./VariableCostPerUnit'));
  } else {
    // Browser globals (root is window)
    if (!root.S4sFull) {
      root.S4sFull = {};
    }
    root.S4sFull.VariableCost = factory(root.S4sFull.ApiClient, root.S4sFull.VariableCostIntervalCost, root.S4sFull.VariableCostIntervalPerUnit, root.S4sFull.VariableCostPerUnit);
  }
}(this, function(ApiClient, VariableCostIntervalCost, VariableCostIntervalPerUnit, VariableCostPerUnit) {
  'use strict';




  /**
   * The VariableCost model module.
   * @module model/VariableCost
   * @version stable
   */

  /**
   * Constructs a new <code>VariableCost</code>.
   * Model description
   * @alias module:model/VariableCost
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>VariableCost</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VariableCost} obj Optional instance to populate.
   * @return {module:model/VariableCost} The populated <code>VariableCost</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('resourceId')) {
        obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
      }
      if (data.hasOwnProperty('perUnit')) {
        obj['perUnit'] = VariableCostPerUnit.constructFromObject(data['perUnit']);
      }
      if (data.hasOwnProperty('intervalCost')) {
        obj['intervalCost'] = VariableCostIntervalCost.constructFromObject(data['intervalCost']);
      }
      if (data.hasOwnProperty('intervalPerUnit')) {
        obj['intervalPerUnit'] = VariableCostIntervalPerUnit.constructFromObject(data['intervalPerUnit']);
      }
      if (data.hasOwnProperty('typ')) {
        obj['typ'] = ApiClient.convertToType(data['typ'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} resourceId
   */
  exports.prototype['resourceId'] = undefined;
  /**
   * @member {module:model/VariableCostPerUnit} perUnit
   */
  exports.prototype['perUnit'] = undefined;
  /**
   * @member {module:model/VariableCostIntervalCost} intervalCost
   */
  exports.prototype['intervalCost'] = undefined;
  /**
   * @member {module:model/VariableCostIntervalPerUnit} intervalPerUnit
   */
  exports.prototype['intervalPerUnit'] = undefined;
  /**
   * @member {module:model/VariableCost.TypEnum} typ
   */
  exports.prototype['typ'] = undefined;


  /**
   * Allowed values for the <code>typ</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypEnum = {
    /**
     * value: "IntervalCost"
     * @const
     */
    "IntervalCost": "IntervalCost",
    /**
     * value: "IntervalPerUnit"
     * @const
     */
    "IntervalPerUnit": "IntervalPerUnit",
    /**
     * value: "PerUnit"
     * @const
     */
    "PerUnit": "PerUnit",
    /**
     * value: "NoCost"
     * @const
     */
    "NoCost": "NoCost"  };


  return exports;
}));


