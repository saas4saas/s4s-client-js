/**
 * s4s-full
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S4sFull);
  }
}(this, function(expect, S4sFull) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new S4sFull.SsProductApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SsProductApi', function() {
    describe('customerEnjoyAdd', function() {
      it('should call customerEnjoyAdd successfully', function(done) {
        //uncomment below and update the code to test customerEnjoyAdd
        //instance.customerEnjoyAdd(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerEnjoyClose', function() {
      it('should call customerEnjoyClose successfully', function(done) {
        //uncomment below and update the code to test customerEnjoyClose
        //instance.customerEnjoyClose(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerEnjoyGet', function() {
      it('should call customerEnjoyGet successfully', function(done) {
        //uncomment below and update the code to test customerEnjoyGet
        //instance.customerEnjoyGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerEnjoyGetAll', function() {
      it('should call customerEnjoyGetAll successfully', function(done) {
        //uncomment below and update the code to test customerEnjoyGetAll
        //instance.customerEnjoyGetAll(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerEnjoySpend', function() {
      it('should call customerEnjoySpend successfully', function(done) {
        //uncomment below and update the code to test customerEnjoySpend
        //instance.customerEnjoySpend(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerEnjoyValues', function() {
      it('should call customerEnjoyValues successfully', function(done) {
        //uncomment below and update the code to test customerEnjoyValues
        //instance.customerEnjoyValues(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerHistoryPackGet', function() {
      it('should call customerHistoryPackGet successfully', function(done) {
        //uncomment below and update the code to test customerHistoryPackGet
        //instance.customerHistoryPackGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerHistoryPackGetAll', function() {
      it('should call customerHistoryPackGetAll successfully', function(done) {
        //uncomment below and update the code to test customerHistoryPackGetAll
        //instance.customerHistoryPackGetAll(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerHistoryPackValues', function() {
      it('should call customerHistoryPackValues successfully', function(done) {
        //uncomment below and update the code to test customerHistoryPackValues
        //instance.customerHistoryPackValues(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerHistorySubscriptionGet', function() {
      it('should call customerHistorySubscriptionGet successfully', function(done) {
        //uncomment below and update the code to test customerHistorySubscriptionGet
        //instance.customerHistorySubscriptionGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerHistorySubscriptionGetAll', function() {
      it('should call customerHistorySubscriptionGetAll successfully', function(done) {
        //uncomment below and update the code to test customerHistorySubscriptionGetAll
        //instance.customerHistorySubscriptionGetAll(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerHistorySubscriptionValues', function() {
      it('should call customerHistorySubscriptionValues successfully', function(done) {
        //uncomment below and update the code to test customerHistorySubscriptionValues
        //instance.customerHistorySubscriptionValues(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerResource', function() {
      it('should call customerResource successfully', function(done) {
        //uncomment below and update the code to test customerResource
        //instance.customerResource(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerSubscriptionAdd', function() {
      it('should call customerSubscriptionAdd successfully', function(done) {
        //uncomment below and update the code to test customerSubscriptionAdd
        //instance.customerSubscriptionAdd(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerSubscriptionClose', function() {
      it('should call customerSubscriptionClose successfully', function(done) {
        //uncomment below and update the code to test customerSubscriptionClose
        //instance.customerSubscriptionClose(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerSubscriptionGet', function() {
      it('should call customerSubscriptionGet successfully', function(done) {
        //uncomment below and update the code to test customerSubscriptionGet
        //instance.customerSubscriptionGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerSubscriptionGetAll', function() {
      it('should call customerSubscriptionGetAll successfully', function(done) {
        //uncomment below and update the code to test customerSubscriptionGetAll
        //instance.customerSubscriptionGetAll(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerSubscriptionRenew', function() {
      it('should call customerSubscriptionRenew successfully', function(done) {
        //uncomment below and update the code to test customerSubscriptionRenew
        //instance.customerSubscriptionRenew(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerSubscriptionSpend', function() {
      it('should call customerSubscriptionSpend successfully', function(done) {
        //uncomment below and update the code to test customerSubscriptionSpend
        //instance.customerSubscriptionSpend(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerSubscriptionValues', function() {
      it('should call customerSubscriptionValues successfully', function(done) {
        //uncomment below and update the code to test customerSubscriptionValues
        //instance.customerSubscriptionValues(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfigGet', function() {
      it('should call productConfigGet successfully', function(done) {
        //uncomment below and update the code to test productConfigGet
        //instance.productConfigGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productConfigPut', function() {
      it('should call productConfigPut successfully', function(done) {
        //uncomment below and update the code to test productConfigPut
        //instance.productConfigPut(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
