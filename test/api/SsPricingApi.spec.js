/**
 * s4s-full
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S4sFull);
  }
}(this, function(expect, S4sFull) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new S4sFull.SsPricingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SsPricingApi', function() {
    describe('customerBillClose', function() {
      it('should call customerBillClose successfully', function(done) {
        //uncomment below and update the code to test customerBillClose
        //instance.customerBillClose(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerBillGet', function() {
      it('should call customerBillGet successfully', function(done) {
        //uncomment below and update the code to test customerBillGet
        //instance.customerBillGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerBillInitGet', function() {
      it('should call customerBillInitGet successfully', function(done) {
        //uncomment below and update the code to test customerBillInitGet
        //instance.customerBillInitGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerBillInitPost', function() {
      it('should call customerBillInitPost successfully', function(done) {
        //uncomment below and update the code to test customerBillInitPost
        //instance.customerBillInitPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerBillOrGet', function() {
      it('should call customerBillOrGet successfully', function(done) {
        //uncomment below and update the code to test customerBillOrGet
        //instance.customerBillOrGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerBillValues', function() {
      it('should call customerBillValues successfully', function(done) {
        //uncomment below and update the code to test customerBillValues
        //instance.customerBillValues(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerHistoryPlanValues', function() {
      it('should call customerHistoryPlanValues successfully', function(done) {
        //uncomment below and update the code to test customerHistoryPlanValues
        //instance.customerHistoryPlanValues(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanAdd', function() {
      it('should call customerPlanAdd successfully', function(done) {
        //uncomment below and update the code to test customerPlanAdd
        //instance.customerPlanAdd(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanAddCheck', function() {
      it('should call customerPlanAddCheck successfully', function(done) {
        //uncomment below and update the code to test customerPlanAddCheck
        //instance.customerPlanAddCheck(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanClose', function() {
      it('should call customerPlanClose successfully', function(done) {
        //uncomment below and update the code to test customerPlanClose
        //instance.customerPlanClose(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanFamily', function() {
      it('should call customerPlanFamily successfully', function(done) {
        //uncomment below and update the code to test customerPlanFamily
        //instance.customerPlanFamily(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanGet', function() {
      it('should call customerPlanGet successfully', function(done) {
        //uncomment below and update the code to test customerPlanGet
        //instance.customerPlanGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanGetAll', function() {
      it('should call customerPlanGetAll successfully', function(done) {
        //uncomment below and update the code to test customerPlanGetAll
        //instance.customerPlanGetAll(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanPay', function() {
      it('should call customerPlanPay successfully', function(done) {
        //uncomment below and update the code to test customerPlanPay
        //instance.customerPlanPay(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanPlan', function() {
      it('should call customerPlanPlan successfully', function(done) {
        //uncomment below and update the code to test customerPlanPlan
        //instance.customerPlanPlan(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('customerPlanValues', function() {
      it('should call customerPlanValues successfully', function(done) {
        //uncomment below and update the code to test customerPlanValues
        //instance.customerPlanValues(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pricing', function() {
      it('should call pricing successfully', function(done) {
        //uncomment below and update the code to test pricing
        //instance.pricing(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pricing2', function() {
      it('should call pricing2 successfully', function(done) {
        //uncomment below and update the code to test pricing2
        //instance.pricing2(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pricingConfigGet', function() {
      it('should call pricingConfigGet successfully', function(done) {
        //uncomment below and update the code to test pricingConfigGet
        //instance.pricingConfigGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pricingConfigPut', function() {
      it('should call pricingConfigPut successfully', function(done) {
        //uncomment below and update the code to test pricingConfigPut
        //instance.pricingConfigPut(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pricingUiConf', function() {
      it('should call pricingUiConf successfully', function(done) {
        //uncomment below and update the code to test pricingUiConf
        //instance.pricingUiConf(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pricingUiConfigGet', function() {
      it('should call pricingUiConfigGet successfully', function(done) {
        //uncomment below and update the code to test pricingUiConfigGet
        //instance.pricingUiConfigGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pricingUiConfigPut', function() {
      it('should call pricingUiConfigPut successfully', function(done) {
        //uncomment below and update the code to test pricingUiConfigPut
        //instance.pricingUiConfigPut(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
